name: CI

on:
  push:
    branches: [canary]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            packages/*/dist
            packages/*/*/dist
            !node_modules/**/dist

  lint:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  test_e2e:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages
      - run: pnpm install --frozen-lockfile
      - run: pnpm test:e2e

  typecheck:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages
      - run: pnpm install --frozen-lockfile
      - run: pnpm typecheck

  pass:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test
      - test_e2e
      - typecheck
    steps:
      - run: exit 0

  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'scaffdog/scaffdog' && github.ref == 'refs/heads/canary'
    needs: [pass]
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: packages
      - run: pnpm install --frozen-lockfile
      - name: Creating .npmrc
        run: |
          cat << EOF > ".npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
      - name: Create Release Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: changesets/action@v1
        with:
          publish: pnpm release
          commit: 'chore: version packages'
